{"version":3,"sources":["logo.svg","home.svg","tictac.svg","bank.svg","city.svg","link.svg","coins.svg","settings.svg","components/tictactoe/Square.js","components/tictactoe/Board.js","components/tictactoe/Game.js","components/accounts/NewAccount.js","components/accounts/scripts/functions.js","components/accounts/Accounts.js","components/cities/scripts/cities.js","components/cities/scripts/api.js","components/cities/City.js","components/cities/Cities.js","components/linkedLists/scripts/linkedList.js","components/context/context.js","components/linkedLists/LinkedLists.js","components/fifoLifo/fifoLifo.js","components/fifoLifo/Fifo.js","components/fifoLifo/Lifo.js","components/fifoLifo/FifoLifos.js","components/context/Settings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","NewAccount","inputChange","e","inputAmount","target","handleDeposit","account","deposit","calculate","handleWithdraw","withdraw","id","accountName","type","onChange","balance","handleDelete","Account","Number","amount","AccountController","userAccounts","message","newAccount","push","forEach","element","filter","totalBalance","reduce","accumulator","user","sort","name","highestAcc","maxBalance","lowestAcc","minBalance","highestBal","lowestBal","highAcc","lowAcc","highBal","lowBal","accountToDel","removeAccount","accExist","accName","accAmount","bind","addAccount","cards","City","latitude","longitude","population","Name","Latitude","Longitude","Population","num","Community","cities","lat","long","pop","newCity","ckey","city","url","apiFunctions","postData","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","json","statusText","loadData","addCity","console","log","deleteCity","updateCity","getAllCities","clearAllCities","inputPop","handleMoveIn","movedIn","movedOut","calculationsDiv","handleMoveOut","newKey","Cities","componentDidMount","errorMessage","cityExist","renderCities","mostNorthern","getMostNorthern","mostSouthern","getMostSouthern","totalPopulation","getPopulation","mostNorth","mostSouth","totPop","createCity","cName","cLat","cLong","cPop","cityToDel","ListNode","subject","forwardNode","prevNode","LinkedList","head","newNode","lastNode","total","loopNode","ThemeContext","createContext","ThemeContextProvider","isLightTheme","green","text","bgBut","bgDiv","white","toggleTheme","Provider","children","list","LinkedLists","useContext","theme","useState","setSubject","setAmount","position","setPosition","setMessage","style","background","event","insertNode","color","firstPosition","previousNode","nextNode","lastPosition","tot","totalAmount","setTimeout","deleteNode","listNodes","node","counter","displayList","Queue","queueArr","shift","Stack","stackArr","Fifo","queueL","Lifo","stackL","FifoLifos","firstQueue","setfirstQueue","lastStack","setlastStack","index","setIndex","abc","addQueue","addStack","deleteQueue","deleteStack","Settings","App","showIcons","src","home","alt","onPushMe","tictac","bank","link","stack","settings","showApp","whoClicked","logo","href","rel","newDiv","contextType","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,6aCU5BC,MARf,SAAgBC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,QC+BEC,E,qLAhCAC,GAAI,IAAD,OACd,OACE,kBAAC,EAAD,CACEF,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMtC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA1BTC,IAAMC,WCqEXC,E,YApEb,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACXC,QAAS,CAAC,CAAEN,QAASO,MAAM,GAAGC,KAAK,QACnCC,SAAS,EACTC,WAAY,GALG,E,yEASPZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CACtB,CACEf,QAASA,KAGbU,WAAYJ,EAAQM,OACpBH,SAAUV,KAAKM,MAAMI,a,6BAIlBO,GACLjB,KAAKe,SAAS,CACZJ,WAAYM,EACZP,QAASO,EAAO,IAAM,M,+BAIhB,IAYJC,EAZG,OACDX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMK,YAC7BS,EAASN,EAAgBK,EAAQlB,SACjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OACE,wBAAIE,IAAKF,GACP,4BAAQ3B,QAAS,kBAAM,EAAK8B,OAAOH,KAAQC,OAWjD,OALEN,EADEE,EACO,WAAaA,EAEb,iBAAmBpB,KAAKM,MAAMI,QAAU,IAAM,KAIvD,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAOM,QAASkB,EAAQlB,QAASL,QAAS,SAAAG,GAAC,OAAI,EAAK4B,YAAY5B,OAElE,yBAAKJ,UAAU,aACb,6BAAMuB,GACN,4BAAKG,S,GA9DIlB,IAAMC,WAuEzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMf,OAAQd,IAAK,CAAC,IAAD,cACnB6B,EAAM7B,GADa,GAC9B8B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,K,mBC1BMG,G,kBA9Db,WAAYtC,GAAQ,IAAD,8BACjB,4CAAMA,KAMRuC,YAAc,SAAAC,GACZ,EAAKnB,SAAS,CACZoB,YAAaD,EAAEE,OAAOvC,SATP,EAanBwC,cAAgB,SAAAH,GACd,EAAKxC,MAAM4C,QAAQC,QAAQ,EAAKjC,MAAM6B,aACtC,EAAKpB,SAAS,CACZoB,YAAa,KAGf,EAAKzC,MAAM8C,aAnBM,EAsBnBC,eAAiB,SAAAP,GACf,EAAKxC,MAAM4C,QAAQI,SAAS,EAAKpC,MAAM6B,aACvC,EAAKpB,SAAS,CACZoB,YAAa,KAGf,EAAKzC,MAAM8C,aA1BX,EAAKlC,MAAQ,CACX6B,YAAa,IAHE,E,sEA+BT,IAAD,OACP,OACE,yBAAKxC,UAAU,QACb,0BAAMgD,GAAG,QAAQ3C,KAAKN,MAAM4C,QAAQM,aACpC,2BAAOC,KAAK,SAASF,GAAG,WAAWG,SAAU9C,KAAKiC,cAClD,0BAAMU,GAAG,OAAO3C,KAAKN,MAAM4C,QAAQS,SACnC,2BACEF,KAAK,SACLhD,MAAM,UACN8C,GAAG,YACH/C,QAASI,KAAKqC,gBAEhB,2BACEQ,KAAK,SACLhD,MAAM,iBACN8C,GAAG,QACH/C,QAAS,kBACP,EAAKF,MAAMsD,aAAa,EAAKtD,MAAM4C,QAAQM,gBAG/C,2BACEC,KAAK,SACLhD,MAAM,WACN8C,GAAG,aACH/C,QAASI,KAAKyC,sB,GAxDCtC,IAAMC,YCFzB6C,E,WACJ,WAAYxB,EAAKmB,EAAaG,GAAU,oBACtC/C,KAAKyB,IAAMyB,OAAOzB,GAClBzB,KAAK4C,YAAcA,EACnB5C,KAAK+C,QAAUG,OAAOH,G,oDAEhBI,GAEN,OADAnD,KAAK+C,QAAUG,OAAOlD,KAAK+C,SAAWG,OAAOC,GACtCnD,KAAK+C,U,+BAGLI,GAEP,OADAnD,KAAK+C,QAAU/C,KAAK+C,QAAUI,EACvBnD,KAAK+C,U,6BAIZ,OAAO/C,KAAK+C,Y,KAIVK,E,WACJ,aAAe,oBACbpD,KAAKqD,aAAe,GACpBrD,KAAKyB,IAAM,E,uDAGFmB,EAAaG,GACtB,IAAIO,EAEJ,GADAtD,KAAKyB,MAC4B,IAA7BzB,KAAKqD,aAAaxC,OAAc,CAClC,IAAM0C,EAAa,IAAIN,EAAQjD,KAAKyB,IAAKmB,EAAaG,GACtD/C,KAAKqD,aAAaG,KAAKD,GACvBD,EAAU,uBASV,GAPAtD,KAAKqD,aAAaI,SAAQ,SAASC,GAE/BJ,EADEI,EAAQd,cAAgBA,EAChB,iBAEA,qBAGE,oBAAZU,EAA+B,CACjC,IAAMC,EAAa,IAAIN,EAAQjD,KAAKyB,IAAKmB,EAAaG,GACtD/C,KAAKqD,aAAaG,KAAKD,GAG3B,OAAOD,I,oCAGKV,GACZ5C,KAAKqD,aAAerD,KAAKqD,aAAaM,QACpC,SAAArB,GAAO,OAAIA,EAAQM,cAAgBA,O,qCAKrC,IAAIgB,EAAe5D,KAAKqD,aAAaQ,QACnC,SAACC,EAAaC,GAAd,OAAuBD,EAAcC,EAAKhB,UAC1C,GAEF,OAAOa,I,mCAIP,OAAO5D,KAAKqD,aAAazC,QAAQoD,MAAK,SAACnC,EAAGC,GAAJ,OAAUA,EAAEiB,QAAUlB,EAAEkB,WAAS,K,mCAIvE,OAAO/C,KAAKqD,aAAazC,QAAQoD,MAAK,SAACnC,EAAGC,GAAJ,OAAUD,EAAEkB,QAAUjB,EAAEiB,WAAS,O,KC0E5DE,E,YAzIb,WAAYvD,GAAQ,IAAD,8BACjB,4CAAMA,KAiCRoD,SAAW,SAAAZ,GACT,EAAKnB,SAAL,eACGmB,EAAEE,OAAO6B,KAAO/B,EAAEE,OAAOvC,SApCX,EAwCnB2C,UAAY,WACV,GAAI,EAAKe,WAAWF,aAAaxC,OAAS,EAAG,CAC3C,IAAMqD,EAAa,EAAKX,WAAWY,aAAavB,YAC1CwB,EAAY,EAAKb,WAAWc,aAAazB,YACzC0B,EAAa,EAAKf,WAAWY,aAAapB,QAC1CwB,EAAY,EAAKhB,WAAWc,aAAatB,QAE/C,EAAKhC,SAAS,CACZyD,QAASN,EACTO,OAAQL,EACRM,QAASJ,EACTK,OAAQJ,SAGV,EAAKxD,SAAS,CACZyD,QAAS,GACTC,OAAQ,GACRC,QAAS,EACTC,OAAQ,KA1DK,EA+DnB3B,aAAe,SAAA4B,GACb,EAAKrB,WAAWsB,cAAcD,GAC9B,EAAKpC,YACL,EAAKzB,SAAS,CACZ+D,SAAU,MAjEZ,EAAKxE,MAAQ,CACXyE,QAAS,GACTC,UAAW,GACXR,QAAS,GACTC,OAAQ,GACRC,QAAS,EACTC,OAAQ,EACRG,SAAU,GACVxB,QAAS,IAEX,EAAKC,WAAa,IAAIH,EACtB,EAAKzB,YAAc,EAAKA,YAAYsD,KAAjB,gBACnB,EAAKnC,SAAW,EAAKA,SAASmC,KAAd,gBAdC,E,kHAiBD/C,G,iFACVlC,KAAKe,SAAS,CAClB+D,SAAU9E,KAAKuD,WAAW2B,WACxBlF,KAAKM,MAAMyE,QACX/E,KAAKM,MAAM0E,WAEb1B,QAAStD,KAAKM,MAAMwE,W,aAEM,oBAAxB9E,KAAKM,MAAMwE,UACb9E,KAAKwC,Y,SAEDxC,KAAKe,SAAS,CAClBgE,QAAS,GACTC,UAAW,K,sIAyCL,IAAD,OACHG,EAAQnF,KAAKuD,WAAWF,aAAa/B,KAAI,SAAAgB,GAC3C,OACE,kBAAC,EAAD,CACEb,IAAKa,EAAQb,IACba,QAASA,EACTE,UAAW,EAAKA,UAChBQ,aAAc,EAAKA,kBAIzB,OACE,yBAAKrD,UAAU,YAAYgD,GAAG,eAC5B,2CACA,2CACA,yBAAKhD,UAAU,QACf,yBAAKA,UAAU,OAAOK,KAAKM,MAAMgD,SACjC,yBAAK3D,UAAU,WACb,yBAAKA,UAAU,YAAf,gBAEE,2BACEA,UAAU,YACVgD,GAAG,SACHE,KAAK,OACLoB,KAAK,UACLnB,SAAU9C,KAAK8C,WAPnB,UAUE,2BACEnD,UAAU,cACVgD,GAAG,UACHE,KAAK,SACLoB,KAAK,YACLnB,SAAU9C,KAAK8C,WAEjB,2BACEnD,UAAU,cACVgD,GAAG,eACHE,KAAK,SACLhD,MAAM,iBACND,QAASI,KAAK2B,eAGlB,yBAAKhC,UAAU,UAAUgD,GAAG,aAC1B,yBAAKA,GAAG,cAAR,4BAC2B,6BACzB,yBAAKhD,UAAU,SAASgD,GAAG,oBACzB,kCAAQ3C,KAAKM,MAAMkE,SACnB,8BAAOxE,KAAKM,MAAMoE,WAGtB,yBAAK/B,GAAG,aAAR,2BAC0B,6BACxB,yBAAKhD,UAAU,SAASgD,GAAG,mBACzB,8BAAO3C,KAAKM,MAAMmE,QAClB,8BAAOzE,KAAKM,MAAMqE,YAK1B,yBAAKhF,UAAU,SAASwF,Q,GApIVhF,IAAMC,WCLtBgF,G,iBACJ,WAAY3D,EAAKwC,EAAMoB,EAAUC,EAAWC,GAAa,oBACvDvF,KAAKyB,IAAMA,EACXzB,KAAKwF,KAAOvB,EACZjE,KAAKyF,SAAWJ,EAChBrF,KAAK0F,UAAYJ,EACjBtF,KAAK2F,WAAazC,OAAOqC,G,mDAIzB,MAAM,GAAN,OAAUvF,KAAKwF,KAAf,0BAAqCxF,KAAKyF,SAA1C,YAAsDzF,KAAK0F,UAA3D,uCAAmG1F,KAAK2F,c,8BAGlGC,GACN5F,KAAK2F,YAAcC,I,+BAGZA,GACP5F,KAAK2F,YAAcC,I,+BAInB,QAAQ,GACN,KAAK,EAAI5F,KAAK2F,YAAc3F,KAAK2F,YAAc,IAC7C,MAAO,8BAET,KAAK3F,KAAK2F,WAAa,IACrB,MAAO,yDAET,KAAK3F,KAAK2F,WAAa,IACrB,MAAO,oDAET,KAAK3F,KAAK2F,YAAc,IACtB,MAAO,kEAET,KAAK3F,KAAK2F,WAAa,IACrB,MAAO,qC,MAMTE,E,WACJ,aAAe,oBACb7F,KAAK8F,OAAS,G,uDAGLrE,EAAKwC,EAAM8B,EAAKC,EAAMC,GAC/B,IAAI3C,EACJ,GAA2B,IAAvBtD,KAAK8F,OAAOjF,OAAc,CAC5B,IAAMqF,EAAU,IAAId,EAAK3D,EAAKwC,EAAM8B,EAAKC,EAAMC,GAC/CjG,KAAK8F,OAAOtC,KAAK0C,GACjB5C,EAAU,oBASV,GAPAtD,KAAK8F,OAAOrC,SAAQ,SAASC,GAEzBJ,EADEI,EAAQ+B,WAAaM,GAAOrC,EAAQgC,YAAcM,EAC1C,uBAEA,kBAGE,iBAAZ1C,EAA4B,CAC9B,IAAM4C,EAAU,IAAId,EAAK3D,EAAKwC,EAAM8B,EAAKC,EAAMC,GAC/CjG,KAAK8F,OAAOtC,KAAK0C,GAGrB,OAAO5C,I,iCAGE6C,GACTnG,KAAK8F,OAAS9F,KAAK8F,OAAOnC,QAAO,SAAAyC,GAAI,OAAIA,EAAK3E,MAAQ0E,O,kCAG5CC,GACV,IAAI9C,EAYJ,OAXAtD,KAAK8F,OAAOrC,SAAQ,SAASC,GAGvBJ,EAFAI,EAAQ8B,OAASY,EACf1C,EAAQ+B,SAAW,EACX,sBAEA,sBAGF,wBAGPnC,I,wCAIP,OAAOtD,KAAK8F,OAAOlF,QAAQoD,MAAK,SAACnC,EAAGC,GAAJ,OAAUA,EAAE2D,SAAW5D,EAAE4D,YAAU,K,wCAInE,OAAOzF,KAAK8F,OAAOlF,QAAQoD,MAAK,SAACnC,EAAGC,GAAJ,OAAUD,EAAE4D,SAAW3D,EAAE2D,YAAU,K,sCAQnE,OAJezF,KAAK8F,OAAOjC,QACzB,SAACC,EAAasC,GAAd,OAAuBtC,EAAcsC,EAAKT,aAC1C,O,KCnGAU,EAAM,yBAoFGC,EAlFM,CACbC,SADa,WACkB,IAAtBF,EAAqB,uDAAf,GAAIG,EAAW,uDAAJ,GAAI,mIAEXC,MAAMJ,EAAK,CAChCK,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUX,KAbW,cAE5BY,EAF4B,gBAgBfA,EAASC,OAhBM,cAgB5BA,EAhB4B,QAiB7BnG,OAASkG,EAASlG,OACvBmG,EAAKC,WAAaF,EAASE,WAlBO,kBAoB3BD,GApB2B,8CAuB9BE,SAxBa,SAwBJrB,GAAU,IAAD,iJAEH,EAAKK,SAASF,EAAM,OAFjB,cAEhBG,EAFgB,OAGpBN,EAAQJ,OAASU,EAAKlF,KACpB,SAAA8E,GAAI,OACF,IAAIhB,EACFgB,EAAK3E,IACL2E,EAAKZ,KACLY,EAAKX,SACLW,EAAKV,UACLU,EAAKT,eAVS,mBAab,GAba,yDAeb,sBAfa,4DAmBlB6B,QA3Ca,SA2CLpB,GAAO,IAAD,2IAEV,EAAKG,SAASF,EAAM,MAAOD,GAFjB,iCAGT,GAHS,uCAKhBqB,QAAQC,IAAR,MALgB,kBAMT,qBANS,4DAUdC,WArDa,SAqDFxB,GAAO,IAAD,2IAEb,EAAKI,SAASF,EAAM,SAAU,CAAE5E,IAAK0E,IAFxB,iCAGZ,GAHY,uCAKnBsB,QAAQC,IAAR,MALmB,kBAMZ,iDANY,4DAUjBE,WA/Da,SA+DFxB,GAAO,IAAD,2IAEb,EAAKG,SAASF,EAAM,SAAUD,GAFjB,iCAGZ,GAHY,uCAKnBqB,QAAQC,IAAR,MALmB,kBAMZ,qCANY,4DAUjBG,aAzEa,WAyEG,IAAD,kIACN,EAAKtB,SAASF,EAAM,OADd,sFAIfyB,eA7Ea,WA6EK,IAAD,kIACf,EAAKvB,SAASF,EAAM,SADL,+CCNVjB,E,YAtEb,WAAY1F,GAAQ,IAAD,8BACjB,4CAAMA,KAMRuC,YAAc,SAAAC,GACZ,EAAKnB,SAAS,CACZgH,SAAU7F,EAAEE,OAAOvC,SATJ,EAanBmI,aAbmB,sBAaJ,sBAAAnG,EAAA,6DACb,EAAKnC,MAAM0G,KAAK6B,QAAQ/E,OAAO,EAAK5C,MAAMyH,WAD7B,SAEczB,EAAasB,WAAW,EAAKlI,MAAM0G,MAFjD,eAIX,EAAK1G,MAAM0G,KAAK8B,SAAShF,OAAO,EAAK5C,MAAMyH,WAE7C,EAAKrI,MAAMyI,kBAEX,EAAKpH,SAAS,CACZgH,SAAU,IATC,2CAbI,EA0BnBK,cA1BmB,sBA0BH,sBAAAvG,EAAA,6DACd,EAAKnC,MAAM0G,KAAK8B,SAAShF,OAAO,EAAK5C,MAAMyH,WAD7B,SAEazB,EAAasB,WAAW,EAAKlI,MAAM0G,MAFhD,eAIZ,EAAK1G,MAAM0G,KAAK6B,QAAQ/E,OAAO,EAAK5C,MAAMyH,WAE5C,EAAKrI,MAAMyI,kBAEX,EAAKpH,SAAS,CACZgH,SAAU,IATE,2CAxBd,EAAKzH,MAAQ,CACXyH,SAAU,GAHK,E,sEAuCT,IAAD,OACP,OACE,yBAAKpI,UAAU,YACb,0BAAMgD,GAAG,QAAQ3C,KAAKN,MAAM0G,KAAKZ,MACjC,0BAAM7C,GAAG,YAAT,aAA+B3C,KAAKN,MAAM0G,KAAKX,UAC/C,0BAAM9C,GAAG,aAAT,cAAiC3C,KAAKN,MAAM0G,KAAKV,WACjD,0BAAM/C,GAAG,cAAT,eAAmC3C,KAAKN,MAAM0G,KAAKT,YACnD,2BAAO9C,KAAK,SAASF,GAAG,WAAWG,SAAU9C,KAAKiC,cAClD,2BACEtC,UAAU,SACVkD,KAAK,SACLhD,MAAM,UACND,QAASI,KAAKgI,eAEhB,2BACErI,UAAU,SACVkD,KAAK,SACLhD,MAAM,cACND,QAAS,kBAAM,EAAKF,MAAMiI,WAAW,EAAKjI,MAAM0G,KAAK3E,QAEvD,2BACE9B,UAAU,UACVkD,KAAK,SACLhD,MAAM,WACND,QAASI,KAAKoI,qB,GAhELjI,IAAMC,WCGrBiI,EAAS,EA2LEC,E,YAxLb,WAAY5I,GAAQ,IAAD,8BACjB,4CAAMA,KAgBR6I,kBAjBmB,sBAiBC,4BAAA1G,EAAA,sEACSyE,EAAaiB,SAAS,EAAKnB,MADpC,QACZoC,EADY,QAGhB,EAAKzH,SAAS,CACZuC,QAASkF,KAGX,EAAKzH,SAAS,CACZ0H,UAAW,KAET,EAAKrC,KAAKN,OAAOjF,OAAS,GAC5BwH,EAAS,EAAKjC,KAAKN,OAAO,EAAKM,KAAKN,OAAOjF,OAAS,GAAGY,IACvD,EAAK0G,mBAEL,EAAKpH,SAAS,CACZuC,QAAS,+BAfG,2CAjBD,EAsCnBoF,aAAe,WACb,OAAO,EAAKtC,KAAKN,OAAOxE,KAAI,SAAA8E,GAC1B,OACE,kBAAC,EAAD,CACE3E,IAAK2E,EAAK3E,IACV2E,KAAMA,EACNuB,WAAY,EAAKA,WACjBQ,gBAAiB,EAAKA,sBA7CX,EAmDnBA,gBAAkB,WAChB,GAAI,EAAK/B,KAAKN,OAAOjF,OAAS,EAAG,CAC/B,IAAM8H,EAAe,EAAKvC,KAAKwC,kBAAkBpD,KAC3CqD,EAAe,EAAKzC,KAAK0C,kBAAkBtD,KAC3CuD,EAAkB,EAAK3C,KAAK4C,gBAElC,EAAKjI,SAAS,CACZkI,UAAWN,EACXO,UAAWL,EACXM,OAAQJ,SAGV,EAAKhI,SAAS,CACZkI,UAAW,GACXC,UAAW,GACXC,OAAQ,KAlEK,EAuEnBrG,SAAW,SAAAZ,GACT,EAAKnB,SAAL,eACGmB,EAAEE,OAAO6B,KAAO/B,EAAEE,OAAOvC,SAzEX,EA6EnB2H,QA7EmB,sBA6ET,4BAAA3F,EAAA,6DACRwG,IADQ,SAEF,EAAKtH,SAAS,CAClB0H,UAAW,EAAKrC,KAAKgD,WACnBf,EACA,EAAK/H,MAAM+I,MACX,EAAK/I,MAAMgJ,KACX,EAAKhJ,MAAMiJ,MACX,EAAKjJ,MAAMkJ,MAEblG,QAAS,EAAKhD,MAAMmI,YAVd,UAaqB,iBAAzB,EAAKnI,MAAMmI,UAbP,iCAcmBnC,EAAakB,QACpC,EAAKpB,KAAKN,OAAO,EAAKM,KAAKN,OAAOjF,OAAS,IAfvC,OAiBe,uBAHjB2H,EAdE,SAkBJ,EAAKzH,SAAS,CACZuC,QAASkF,IAEX,EAAKpC,KAAKuB,WAAWU,GACrBA,KAEA,EAAKF,kBAxBD,wBA2BNE,IACA,EAAKtH,SAAS,CAAEuC,QAAS,EAAKhD,MAAMmI,YA5B9B,yBA8BF,EAAK1H,SAAS,CAClBsI,MAAO,GACPC,KAAM,EACNC,MAAO,EACPC,KAAM,IAlCA,4CA7ES,EAmHnB7B,WAnHmB,uCAmHN,WAAM8B,GAAN,eAAA5H,EAAA,sEACgByE,EAAaqB,WAAW8B,GADxC,QACLjB,EADK,QAGT,EAAKzH,SAAS,CACZuC,QAASkF,KAGX,EAAKpC,KAAKuB,WAAW8B,GACrB,EAAK1I,SAAS,CACZ0H,UAAW,KAEb,EAAKN,mBAXI,2CAnHM,sDAEjB,EAAK7H,MAAQ,CACX+I,MAAO,GACPC,KAAM,EACNC,MAAO,EACPC,KAAM,EACNf,UAAW,GACXnF,QAAS,GACT2F,UAAW,GACXC,UAAW,GACXC,OAAQ,GAGV,EAAK/C,KAAO,IAAIP,EAdC,E,sEAmIjB,OACE,yBAAKlG,UAAU,gBAAgBgD,GAAG,eAChC,yBAAKhD,UAAU,UAAf,aAEE,2BACEgD,GAAG,SACHE,KAAK,OACLoB,KAAK,QACLnB,SAAU9C,KAAK8C,WAEjB,6BARF,YAUE,2BACEH,GAAG,QACHE,KAAK,SACLoB,KAAK,OACLnB,SAAU9C,KAAK8C,WAdnB,aAiBE,2BACEH,GAAG,SACHE,KAAK,SACLoB,KAAK,QACLnB,SAAU9C,KAAK8C,WArBnB,cAwBE,2BACEH,GAAG,QACHE,KAAK,SACLoB,KAAK,OACLnB,SAAU9C,KAAK8C,WAEjB,2BACEH,GAAG,YACHE,KAAK,SACLhD,MAAM,WACND,QAASI,KAAKwH,WAGlB,yBAAK7E,GAAG,SAAS3C,KAAKM,MAAMgD,SAC5B,yBAAK3D,UAAU,kBACb,gDAAsBK,KAAKM,MAAM2I,WACjC,gDAAsBjJ,KAAKM,MAAM4I,WACjC,mDAAyBlJ,KAAKM,MAAM6I,SAEtC,yBAAKxJ,UAAU,cAAcgD,GAAG,aAC7B3C,KAAK0I,qB,GAlLKvI,IAAMC,WCRrBsJ,G,iBACJ,WAAYC,EAASxG,GAAS,oBAC5BnD,KAAK2J,QAAUA,EACf3J,KAAKmD,OAASA,EACdnD,KAAK4J,YAAc,KACnB5J,KAAK6J,SAAW,K,mDAIhB,MAAM,YAAN,OAAmB7J,KAAK2J,QAAxB,qBAA4C3J,KAAKmD,Y,MAI/C2G,E,WACJ,aAAe,oBACb9J,KAAK+J,KAAO,KACZ/J,KAAKmB,QAAU,K,uDAGNwI,EAASxG,GAClB,IAAM6G,EAAU,IAAIN,EAASC,EAASxG,GACtC,OAAkB,OAAdnD,KAAK+J,MACP/J,KAAK+J,KAAOC,EACZhK,KAAKmB,QAAU6I,EACRA,GAE0B,OAA7BhK,KAAKmB,QAAQyI,aACf5J,KAAKmB,QAAQyI,YAAcI,EAC3BA,EAAQJ,YAAc,KACtBI,EAAQH,SAAW7J,KAAKmB,QACxBnB,KAAKmB,QAAU6I,EACRA,IAETA,EAAQJ,YAAc5J,KAAKmB,QAAQyI,YACnCI,EAAQH,SAAW7J,KAAKmB,QACxBnB,KAAKmB,QAAQyI,YAAcI,EAC3BhK,KAAKmB,QAAU6I,EACRA,K,sCAKT,GAAkB,OAAdhK,KAAK+J,KAEP,OADA/J,KAAKmB,QAAUnB,KAAK+J,KACb/J,KAAKmB,U,qCAKd,GAAkB,OAAdnB,KAAK+J,KAAe,CAEtB,IADA,IAAIE,EAAWjK,KAAK+J,KACY,OAAzBE,EAASL,aACdK,EAAWA,EAASL,YAGtB,OADA5J,KAAKmB,QAAU8I,EACRjK,KAAKmB,W,iCAKd,GAAkB,OAAdnB,KAAK+J,KACP,OAAiC,OAA7B/J,KAAKmB,QAAQyI,YACR5J,KAAKmB,SAEdnB,KAAKmB,QAAUnB,KAAKmB,QAAQyI,YACrB5J,KAAKmB,W,qCAKd,GAAkB,OAAdnB,KAAK+J,KACP,OAAK/J,KAAKmB,QAAQ0I,UAGhB7J,KAAKmB,QAAUnB,KAAKmB,QAAQ0I,SACrB7J,KAAKmB,SAHLnB,KAAKmB,U,mCASZnB,KAAKmB,UAAYnB,KAAK+J,KACM,OAA1B/J,KAAK+J,KAAKH,aACZ5J,KAAK+J,KAAO/J,KAAKmB,QAAQyI,YACzB5J,KAAK+J,KAAKF,SAAW,KACrB7J,KAAKmB,QAAUnB,KAAK+J,OAEpB/J,KAAK+J,KAAO,KACZ/J,KAAKmB,QAAU,MAGgB,OAA7BnB,KAAKmB,QAAQyI,aACf5J,KAAKmB,QAAQ0I,SAASD,YAAc,KACpC5J,KAAKmB,QAAUnB,KAAKmB,QAAQ0I,WAE5B7J,KAAKmB,QAAQ0I,SAASD,YAAc5J,KAAKmB,QAAQyI,YACjD5J,KAAKmB,QAAQyI,YAAYC,SAAW7J,KAAKmB,QAAQ0I,SACjD7J,KAAKmB,QAAUnB,KAAKmB,QAAQ0I,Y,oCAMhC,GAAkB,OAAd7J,KAAK+J,KACP,MAAO,gBAIP,IAFA,IAAIG,EAAQ,EACRC,EAAWnK,KAAK+J,KACY,OAAzBI,EAASP,aACdM,GAASC,EAAShH,OAClBgH,EAAWA,EAASP,YAGtB,OADAM,GAASC,EAAShH,W,aC9GXiH,EAAejK,IAAMkK,gBAuBnBC,E,2MApBbhK,MAAQ,CACNiK,cAAc,EACdC,MAAO,CAAEC,KAAM,QAASC,MAAO,UAAWC,MAAO,WACjDC,MAAO,CAAEH,KAAM,QAASC,MAAO,UAAWC,MAAO,U,EAGnDE,YAAc,WACZ,EAAK9J,SAAS,CAAEwJ,cAAe,EAAKjK,MAAMiK,gB,wEAG1C,OACE,kBAACH,EAAaU,SAAd,CACEjL,MAAK,eAAOG,KAAKM,MAAZ,CAAmBuK,YAAa7K,KAAK6K,eAEzC7K,KAAKN,MAAMqL,c,GAfe3K,aCC7B4K,GAAO,IAAIlB,EAwKFmB,GAtKK,WAAO,IAAD,EACeC,qBAAWd,GAA1CG,EADgB,EAChBA,aAAcC,EADE,EACFA,MAAOI,EADL,EACKA,MACvBO,EAAQZ,EAAeC,EAAQI,EAFb,EAGMQ,mBAAS,IAHf,mBAGjBzB,EAHiB,KAGR0B,EAHQ,OAIID,mBAAS,IAJb,mBAIjBjI,EAJiB,KAITmI,EAJS,OAKQF,mBAAS,iBALjB,mBAKjBG,EALiB,KAKPC,EALO,OAMIJ,mBAAS,IANb,mBAMnB9H,EANmB,KAMVmI,EANU,KA6FxB,OACE,yBAAK9L,UAAU,gBAAgB+L,MAAO,CAAEC,WAAYR,EAAMR,QACxD,yBAAKhL,UAAU,YAAf,QAEE,2BACEkD,KAAK,OACLF,GAAG,YACH9C,MAAO8J,EACP7G,SAAU,SAAA8I,GAAK,OAAIP,EAAWO,EAAMxJ,OAAOvC,UAN/C,UASE,2BACEgD,KAAK,SACLF,GAAG,WACH9C,MAAOsD,EACPL,SAAU,SAAA8I,GAAK,OAAIN,EAAUM,EAAMxJ,OAAOvC,UAE5C,2BACEF,UAAU,UACVkD,KAAK,SACLhD,MAAM,WACND,QA1GU,WACA,KAAZ+J,GAA6B,KAAXxG,GACpB6H,GAAKa,WAAWlC,EAASzG,OAAOC,IAChCqI,EAAYR,GAAK7J,QAAQwI,SACzB0B,EAAW,IACXC,EAAU,IACVG,EAAW,KAEXA,EAAW,oCAmGPC,MAAO,CAAEI,MAAOX,EAAMV,KAAMkB,WAAYR,EAAMT,UAGlD,yBAAK/K,UAAU,WAAW2D,GAC1B,yBAAK3D,UAAU,WAAf,iBAAwC4L,GACxC,yBAAK5L,UAAU,iBACb,2BACEA,UAAU,aACVkD,KAAK,SACLjD,QApFY,WACdoL,GAAK7J,SACP6J,GAAKe,gBACLP,EAAYR,GAAK7J,QAAQwI,UAEzB6B,EAAY,kBAgFR3L,MAAM,UAER,2BACEF,UAAU,aACVkD,KAAK,SACLhD,MAAM,WACND,QAlFe,WACjBoL,GAAK7J,SACP6J,GAAKgB,eACLR,EAAYR,GAAK7J,QAAQwI,UAEzB6B,EAAY,oBA+EV,2BACE7L,UAAU,aACVkD,KAAK,SACLhD,MAAM,OACND,QA/EW,WACboL,GAAK7J,SACP6J,GAAKiB,WACLT,EAAYR,GAAK7J,QAAQwI,UAEzB6B,EAAY,oBA4EV,2BACE7L,UAAU,aACVkD,KAAK,SACLhD,MAAM,OACND,QA5EW,WACboL,GAAK7J,SACP6J,GAAKkB,eACLV,EAAYR,GAAK7J,QAAQwI,UAEzB6B,EAAY,oBAyEV,2BACE7L,UAAU,aACVkD,KAAK,SACLhD,MAAM,QACND,QAzEY,WAClB,IAAIuM,EAAMnB,GAAKoB,cACfX,EAAWU,GACXE,YAAW,kBAAMZ,EAAW,MAAK,QAwE7B,2BACE9L,UAAU,UACVkD,KAAK,SACLhD,MAAM,cACND,QAzEa,WACfoL,GAAK7J,UACP6J,GAAKsB,aACDtB,GAAK7J,QACPqK,EAAYR,GAAK7J,QAAQwI,SAEzB6B,EAAY,mBAoEVE,MAAO,CAAEI,MAAOX,EAAMV,KAAMkB,WAAYR,EAAMT,UAGlD,yBAAK/K,UAAU,QACb,4BA5Ic,WAClB,GAAKqL,GAAKjB,KAEH,CAIL,IAHA,IAAMwC,EAAY,GACdC,EAAOxB,GAAKjB,KACZ0C,EAAU,EACPD,GACLD,EAAU/I,KACR,wBAAI/B,IAAKgL,GACND,EAAK7C,QADR,KACmB6C,EAAKrJ,SAG1BqJ,EAAOA,EAAK5C,YACZ6C,IAEF,OAAOF,EAdP,OAAO,KA0IAG,OCvKAC,GAAb,WACE,aAAe,oBACb3M,KAAK4M,SAAW,GAFpB,qDAKWpG,GACPxG,KAAK4M,SAASpJ,KAAKgD,KANvB,oCAUIxG,KAAK4M,SAASC,YAVlB,KAcaC,GAAb,WACE,aAAe,oBACb9M,KAAK+M,SAAW,GAFpB,qDAKWvG,GACPxG,KAAK+M,SAASvJ,KAAKgD,KANvB,oCAUIxG,KAAK+M,SAAS9G,UAVlB,KCFe+G,GAVF,SAAAtN,GACX,OACE,6BACGA,EAAMuN,OAAOL,SAAStL,KAAI,SAAAkF,GAAI,OAC7B,4BAAKA,QCME0G,GAVF,SAAAxN,GACX,OACE,6BACGA,EAAMyN,OAAOJ,SAASzL,KAAI,SAAAkF,GAAI,OAC7B,4BAAKA,QCCPyG,I,MAAS,IAAIN,IACbQ,GAAS,IAAIL,GA4FJM,GA1FG,WAAO,IAAD,EACiBlC,qBAAWd,GAA1CG,EADc,EACdA,aAAcC,EADA,EACAA,MAAOI,EADP,EACOA,MACvBO,EAAQZ,EAAeC,EAAQI,EAFf,EAIcQ,mBAAS,IAJvB,mBAIfiC,EAJe,KAIHC,EAJG,OAKYlC,mBAAS,IALrB,mBAKfmC,EALe,KAKJC,EALI,OAMIpC,mBAAS,GANb,mBAMfqC,EANe,KAMRC,EANQ,KAQhBC,EAAM,CACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAoBF,OACE,yBAAKhO,UAAU,gBAAgB+L,MAAO,CAAEC,WAAYR,EAAMR,QAExD,yBAAKhL,UAAU,UACb,yBAAKA,UAAU,QAAf,gBAAoCgO,EAAIF,GAAxC,KACA,4BACE9N,UAAU,QACVC,QAxBY,WAClBqN,GAAOW,SAASD,EAAIF,IACN,IAAVA,GACFH,EAAcK,EAAIF,IAEpBN,GAAOU,SAASF,EAAIF,IACpBD,EAAaG,EAAIF,IACjBC,EAASD,EAAQ,IAkBX/B,MAAO,CAAEI,MAAOX,EAAMV,KAAMkB,WAAYR,EAAMT,QAHhD,WAQF,yBAAK/K,UAAU,SACb,qCACA,qCACA,kBAAC,GAAD,CAAMsN,OAAQA,KACd,kBAAC,GAAD,CAAME,OAAQA,MAEhB,yBAAKxN,UAAU,WACb,yBAAKA,UAAU,QAAf,sBAA0C0N,EAA1C,KACA,yBAAK1N,UAAU,QAAf,sBAA0C4N,IAE5C,yBAAK5N,UAAU,UACb,4BACEA,UAAU,UACVC,QAjCc,WACpBqN,GAAOa,cACPR,EAAcL,GAAOL,SAAS,IAC9BO,GAAOY,cACPP,EAAaL,GAAOJ,SAASI,GAAOJ,SAASlM,OAAS,KA8BhD6K,MAAO,CAAEI,MAAOX,EAAMV,KAAMkB,WAAYR,EAAMT,QAHhD,eC3EOsD,GAXE,WAAO,IACdnD,EAAgBK,qBAAWd,GAA3BS,YAER,OACE,yBAAKlL,UAAU,YACb,6CACA,4BAAQC,QAASiL,GAAjB,wBCWAoD,I,kBAGJ,aAAe,IAAD,8BACZ,+CAaFC,UAAY,WACV,OACE,yBAAKvO,UAAU,YACb,yBACEwO,IAAKC,IACLzO,UAAU,QACVgD,GAAG,UACH0L,IAAI,WACJpK,KAAK,UACLrE,QAAS,SAAAsC,GAAC,OAAI,EAAKoM,SAASpM,EAAEE,OAAO6B,SAGvC,yBACEkK,IAAKI,IACL5O,UAAU,QACVgD,GAAG,WACH0L,IAAI,aACJpK,KAAK,cACLrE,QAAS,SAAAsC,GAAC,OAAI,EAAKoM,SAASpM,EAAEE,OAAO6B,SAEvC,yBACEkK,IAAKK,IACL7O,UAAU,QACVgD,GAAG,UACH0L,IAAI,cACJpK,KAAK,aACLrE,QAAS,SAAAsC,GAAC,OAAI,EAAKoM,SAASpM,EAAEE,OAAO6B,SAEvC,yBACEkK,IAAK/H,IACLzG,UAAU,QACVgD,GAAG,YACH0L,IAAI,WACJpK,KAAK,UACLrE,QAAS,SAAAsC,GAAC,OAAI,EAAKoM,SAASpM,EAAEE,OAAO6B,SAEvC,yBACEkK,IAAKM,IACL9O,UAAU,QACVgD,GAAG,SACH0L,IAAI,WACJpK,KAAK,gBACLrE,QAAS,SAAAsC,GAAC,OAAI,EAAKoM,SAASpM,EAAEE,OAAO6B,SAEvC,yBACEkK,IAAKO,IACL/O,UAAU,QACVgD,GAAG,UACH0L,IAAI,YACJpK,KAAK,cACLrE,QAAS,SAAAsC,GAAC,OAAI,EAAKoM,SAASpM,EAAEE,OAAO6B,SAEvC,yBACEkK,IAAKQ,IACLhP,UAAU,QACVgD,GAAG,aACH0L,IAAI,eACJpK,KAAK,cACLrE,QAAS,SAAAsC,GAAC,OAAI,EAAKoM,SAASpM,EAAEE,OAAO6B,WAxE/B,EA8Ed2K,QAAU,WACR,MAA8B,YAA1B,EAAKtO,MAAMuO,WAEX,6BACE,4BAAQlP,UAAU,cAChB,yBAAKwO,IAAKW,IAAMnP,UAAU,WAAW0O,IAAI,SACzC,mCACO,4CADP,wBAGA,uBACE1O,UAAU,WACVoP,KAAK,sBACL3M,OAAO,SACP4M,IAAI,uBAJN,iBAYsB,gBAA1B,EAAK1O,MAAMuO,WAEX,yBAAKlP,UAAU,aACb,2CACA,yBAAKA,UAAU,WACb,kBAAC,EAAD,QAKsB,eAA1B,EAAKW,MAAMuO,WAEX,yBAAKlP,UAAU,aACb,wCACA,yBAAKA,UAAU,WACb,kBAAC,EAAD,QAKsB,YAA1B,EAAKW,MAAMuO,WAEX,yBAAKlP,UAAU,aACb,sCACA,yBAAKA,UAAU,WACb,kBAAC,EAAD,QAKsB,kBAA1B,EAAKW,MAAMuO,WAEX,yBAAKlP,UAAU,aACb,2CACA,yBAAKA,UAAU,WACb,kBAAC,GAAD,QAKsB,gBAA1B,EAAKW,MAAMuO,WAEX,yBAAKlP,UAAU,aACb,yCACA,yBAAKA,UAAU,WACb,kBAAC,GAAD,QAKsB,gBAA1B,EAAKW,MAAMuO,WAEX,yBAAKlP,UAAU,aACb,wCACA,yBAAKA,UAAU,WACb,kBAAC,GAAD,aALR,GAnJA,EAAKW,MAAQ,CACXuO,WAAY,WAHF,E,+GAOC3M,G,iFACPlC,KAAKe,SAAS,CAClB8N,WAAY3M,I,gCAEPlC,KAAKM,MAAMuO,Y,sIAyJlB,IAAII,EAAS,6BAAMjP,KAAKM,MAAMuO,WAAjB,KACb,OACE,yBAAKlP,UAAU,OACZK,KAAKkO,YACLe,EACD,yBAAKtP,UAAU,gBAAgBK,KAAK4O,gB,GA5K1BzO,IAAMC,YAAlB6N,GACGiB,YAAc9E,EAuLR6D,UC/LKkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.355d4abb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.e5b27194.svg\";","module.exports = __webpack_public_path__ + \"static/media/tictac.463a1fca.svg\";","module.exports = __webpack_public_path__ + \"static/media/bank.823c8a5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/city.1a5f2c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.f8b32221.svg\";","module.exports = __webpack_public_path__ + \"static/media/coins.41f8de84.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.9c4830bb.svg\";","import React from \"react\";\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Square.js\";\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from \"react\";\nimport Board from \"./Board.js\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{ squares: Array(9).fill(null) }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares={current.squares} onClick={i => this.handleClick(i)} />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React from \"react\";\n\nclass NewAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputAmount: \"\"\n    };\n  }\n\n  inputChange = e => {\n    this.setState({\n      inputAmount: e.target.value\n    });\n  };\n\n  handleDeposit = e => {\n    this.props.account.deposit(this.state.inputAmount);\n    this.setState({\n      inputAmount: \"\"\n    });\n\n    this.props.calculate();\n  };\n\n  handleWithdraw = e => {\n    this.props.account.withdraw(this.state.inputAmount);\n    this.setState({\n      inputAmount: \"\"\n    });\n\n    this.props.calculate();\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <span id=\"name\">{this.props.account.accountName}</span>\n        <input type=\"number\" id=\"idAmount\" onChange={this.inputChange} />\n        <span id=\"bal\">{this.props.account.balance}</span>\n        <input\n          type=\"button\"\n          value=\"Deposit\"\n          id=\"idDeposit\"\n          onClick={this.handleDeposit}\n        />\n        <input\n          type=\"button\"\n          value=\"Delete Account\"\n          id=\"idDel\"\n          onClick={() =>\n            this.props.handleDelete(this.props.account.accountName)\n          }\n        />\n        <input\n          type=\"button\"\n          value=\"Withdraw\"\n          id=\"idWithdraw\"\n          onClick={this.handleWithdraw}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NewAccount;\n","class Account {\n  constructor(key, accountName, balance) {\n    this.key = Number(key);\n    this.accountName = accountName;\n    this.balance = Number(balance);\n  }\n  deposit(amount) {\n    this.balance = Number(this.balance) + Number(amount);\n    return this.balance;\n  }\n\n  withdraw(amount) {\n    this.balance = this.balance - amount;\n    return this.balance;\n  }\n\n  show() {\n    return this.balance;\n  }\n}\n\nclass AccountController {\n  constructor() {\n    this.userAccounts = [];\n    this.key = 0;\n  }\n\n  addAccount(accountName, balance) {\n    let message;\n    this.key++;\n    if (this.userAccounts.length === 0) {\n      const newAccount = new Account(this.key, accountName, balance);\n      this.userAccounts.push(newAccount);\n      message = \"Account created\";\n    } else {\n      this.userAccounts.forEach(function(element) {\n        if (element.accountName === accountName) {\n          message = \"Account Exists\";\n        } else {\n          message = \"Account created\";\n        }\n      });\n      if (message === \"Account created\") {\n        const newAccount = new Account(this.key, accountName, balance);\n        this.userAccounts.push(newAccount);\n      }\n    }\n    return message;\n  }\n\n  removeAccount(accountName) {\n    this.userAccounts = this.userAccounts.filter(\n      account => account.accountName !== accountName\n    );\n  }\n\n  totalBalance() {\n    let totalBalance = this.userAccounts.reduce(\n      (accumulator, user) => accumulator + user.balance,\n      0\n    );\n    return totalBalance;\n  }\n\n  maxBalance() {\n    return this.userAccounts.slice().sort((a, b) => b.balance - a.balance)[0];\n  }\n\n  minBalance() {\n    return this.userAccounts.slice().sort((a, b) => a.balance - b.balance)[0];\n  }\n}\n\nexport { Account, AccountController };\n","import React from \"react\";\nimport \"../../../src/accounts.css\";\nimport NewAccount from \"./NewAccount.js\";\nimport { AccountController, functions } from \"./scripts/functions\";\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accName: \"\",\n      accAmount: \"\",\n      highAcc: \"\",\n      lowAcc: \"\",\n      highBal: 0,\n      lowBal: 0,\n      accExist: \"\",\n      message: \"\"\n    };\n    this.newAccount = new AccountController();\n    this.handleClick = this.handleClick.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  async handleClick(e) {\n    await this.setState({\n      accExist: this.newAccount.addAccount(\n        this.state.accName,\n        this.state.accAmount\n      ),\n      message: this.state.accExist\n    });\n    if (this.state.accExist === \"Account created\") {\n      this.calculate();\n    }\n    await this.setState({\n      accName: \"\",\n      accAmount: \"\"\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  calculate = () => {\n    if (this.newAccount.userAccounts.length > 0) {\n      const highestAcc = this.newAccount.maxBalance().accountName;\n      const lowestAcc = this.newAccount.minBalance().accountName;\n      const highestBal = this.newAccount.maxBalance().balance;\n      const lowestBal = this.newAccount.minBalance().balance;\n\n      this.setState({\n        highAcc: highestAcc,\n        lowAcc: lowestAcc,\n        highBal: highestBal,\n        lowBal: lowestBal\n      });\n    } else {\n      this.setState({\n        highAcc: \"\",\n        lowAcc: \"\",\n        highBal: 0,\n        lowBal: 0\n      });\n    }\n  };\n\n  handleDelete = accountToDel => {\n    this.newAccount.removeAccount(accountToDel);\n    this.calculate();\n    this.setState({\n      accExist: \"\"\n    });\n  };\n\n  render() {\n    let cards = this.newAccount.userAccounts.map(account => {\n      return (\n        <NewAccount\n          key={account.key}\n          account={account}\n          calculate={this.calculate}\n          handleDelete={this.handleDelete}\n        />\n      );\n    });\n    return (\n      <div className=\"container\" id=\"idContainer\">\n        <h5>New Account</h5>\n        <h5>My Accounts</h5>\n        <div className=\"msg\"></div>\n        <div className=\"msg\">{this.state.message}</div>\n        <div className=\"leftDiv\">\n          <div className=\"cardLeft\">\n            Account Name:\n            <input\n              className=\"inputName\"\n              id=\"idName\"\n              type=\"text\"\n              name=\"accName\"\n              onChange={this.onChange}\n            ></input>\n            Amount:\n            <input\n              className=\"inputNumber\"\n              id=\"idInput\"\n              type=\"number\"\n              name=\"accAmount\"\n              onChange={this.onChange}\n            />\n            <input\n              className=\"inputButton\"\n              id=\"idNewAccount\"\n              type=\"button\"\n              value=\"Create Account\"\n              onClick={this.handleClick}\n            />\n          </div>\n          <div className=\"balance\" id=\"bottomDiv\">\n            <div id=\"highestDiv\">\n              Highest Balance Account: <br />\n              <div className=\"result\" id=\"idShowHighestDiv\">\n                <span> {this.state.highAcc}</span>\n                <span>{this.state.highBal}</span>\n              </div>\n            </div>\n            <div id=\"lowestDiv\">\n              Lowest Balance Account: <br />\n              <div className=\"result\" id=\"idShowLowestDiv\">\n                <span>{this.state.lowAcc}</span>\n                <span>{this.state.lowBal}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"right\">{cards}</div>\n      </div>\n    );\n  }\n}\n\nexport default Account;\n","class City {\n  constructor(key, name, latitude, longitude, population) {\n    this.key = key;\n    this.Name = name;\n    this.Latitude = latitude;\n    this.Longitude = longitude;\n    this.Population = Number(population);\n  }\n\n  show() {\n    return `${this.Name} is located at ${this.Latitude} ${this.Longitude} and it has a population of ${this.Population}`;\n  }\n\n  movedIn(num) {\n    this.Population += num;\n  }\n\n  movedOut(num) {\n    this.Population -= num;\n  }\n\n  howBig() {\n    switch (true) {\n      case 1 < this.Population && this.Population <= 100:\n        return \"Hamlet - population 1 - 100\";\n        break;\n      case this.Population < 1000:\n        return \"Village - larger than a hamlet but smaller than a town\";\n        break;\n      case this.Population < 20000:\n        return \"Town - a town has a population of 1,000 to 20,000\";\n        break;\n      case this.Population <= 100000:\n        return \"Large town - a large town has a population of 20,000 to 100,000\";\n        break;\n      case this.Population > 100000:\n        return \"City - a population > 100,000\";\n        break;\n    }\n  }\n}\n\nclass Community {\n  constructor() {\n    this.cities = [];\n  }\n\n  createCity(key, name, lat, long, pop) {\n    let message;\n    if (this.cities.length === 0) {\n      const newCity = new City(key, name, lat, long, pop);\n      this.cities.push(newCity);\n      message = \"City created\";\n    } else {\n      this.cities.forEach(function(element) {\n        if (element.Latitude === lat && element.Longitude === long) {\n          message = \"City already entered\";\n        } else {\n          message = \"City created\";\n        }\n      });\n      if (message === \"City created\") {\n        const newCity = new City(key, name, lat, long, pop);\n        this.cities.push(newCity);\n      }\n    }\n    return message;\n  }\n\n  deleteCity(ckey) {\n    this.cities = this.cities.filter(city => city.key !== ckey);\n  }\n\n  whichSphere(city) {\n    let message;\n    this.cities.forEach(function(element) {\n      if (element.Name === city) {\n        if (element.Latitude > 0) {\n          message = \"Northern Hemisphere\";\n        } else {\n          message = \"Southern Hemisphere\";\n        }\n      } else {\n        message = \"City doesn't exist\";\n      }\n    });\n    return message;\n  }\n\n  getMostNorthern() {\n    return this.cities.slice().sort((a, b) => b.Latitude - a.Latitude)[0];\n  }\n\n  getMostSouthern() {\n    return this.cities.slice().sort((a, b) => a.Latitude - b.Latitude)[0];\n  }\n\n  getPopulation() {\n    let totalPop = this.cities.reduce(\n      (accumulator, city) => accumulator + city.Population,\n      0\n    );\n    return totalPop;\n  }\n}\n\nexport { City, Community };\n","import { City, Community } from \"./cities.js\";\nconst url = \"http://localhost:5000/\";\n\nconst apiFunctions = {\n  async postData(url = \"\", data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrer: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n\n    const json = await response.json(); // parses JSON response into native JavaScript objects\n    json.status = response.status;\n    json.statusText = response.statusText;\n    // console.log(json, typeof(json));\n    return json;\n  },\n\n  async loadData(newCity) {\n    try {\n      let data = await this.postData(url + \"all\");\n      newCity.cities = data.map(\n        city =>\n          new City(\n            city.key,\n            city.Name,\n            city.Latitude,\n            city.Longitude,\n            city.Population\n          )\n      );\n      return false;\n    } catch (error) {\n      return \"Error from server.\";\n    }\n  },\n\n  async addCity(city) {\n    try {\n      await this.postData(url + \"add\", city);\n      return false;\n    } catch (error) {\n      console.log(error);\n      return \"Error from server\";\n    }\n  },\n\n  async deleteCity(ckey) {\n    try {\n      await this.postData(url + \"delete\", { key: ckey });\n      return false;\n    } catch (error) {\n      console.log(error);\n      return \"Server not responding. Failed to delete city.\";\n    }\n  },\n\n  async updateCity(city) {\n    try {\n      await this.postData(url + \"update\", city);\n      return false;\n    } catch (error) {\n      console.log(error);\n      return \"Failed to update city population.\";\n    }\n  },\n\n  async getAllCities() {\n    return await this.postData(url + \"all\");\n  },\n\n  async clearAllCities() {\n    await this.postData(url + \"clear\");\n  }\n};\n\nexport default apiFunctions;\n","import React from \"react\";\nimport apiFunctions from \"./scripts/api.js\";\n\nclass City extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputPop: 0\n    };\n  }\n\n  inputChange = e => {\n    this.setState({\n      inputPop: e.target.value\n    });\n  };\n\n  handleMoveIn = async () => {\n    this.props.city.movedIn(Number(this.state.inputPop));\n    const errorMessage = await apiFunctions.updateCity(this.props.city);\n    if (errorMessage) {\n      this.props.city.movedOut(Number(this.state.inputPop));\n    }\n    this.props.calculationsDiv();\n\n    this.setState({\n      inputPop: 0\n    });\n  };\n\n  handleMoveOut = async () => {\n    this.props.city.movedOut(Number(this.state.inputPop));\n    const errorMessage = await apiFunctions.updateCity(this.props.city);\n    if (errorMessage) {\n      this.props.city.movedIn(Number(this.state.inputPop));\n    }\n    this.props.calculationsDiv();\n\n    this.setState({\n      inputPop: 0\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"cityCard\">\n        <span id=\"name\">{this.props.city.Name}</span>\n        <span id=\"latitude\">Latitude: {this.props.city.Latitude}</span>\n        <span id=\"longitude\">Longitude: {this.props.city.Longitude}</span>\n        <span id=\"population\">Population: {this.props.city.Population}</span>\n        <input type=\"number\" id=\"idAmount\" onChange={this.inputChange} />\n        <input\n          className=\"moveIn\"\n          type=\"button\"\n          value=\"Move In\"\n          onClick={this.handleMoveIn}\n        />\n        <input\n          className=\"delete\"\n          type=\"button\"\n          value=\"Delete City\"\n          onClick={() => this.props.deleteCity(this.props.city.key)}\n        />\n        <input\n          className=\"moveOut\"\n          type=\"button\"\n          value=\"Move Out\"\n          onClick={this.handleMoveOut}\n        />\n      </div>\n    );\n  }\n}\n\nexport default City;\n","import React from \"react\";\nimport \"../../../src/cities.css\";\nimport City from \"./City.js\";\nimport { Community, functions } from \"./scripts/cities.js\";\nimport apiFunctions from \"./scripts/api.js\";\n\nlet newKey = 0;\n\nclass Cities extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cName: \"\",\n      cLat: 0,\n      cLong: 0,\n      cPop: 0,\n      cityExist: \"\",\n      message: \"\",\n      mostNorth: \"\",\n      mostSouth: \"\",\n      totPop: 0\n    };\n\n    this.city = new Community();\n  }\n\n  componentDidMount = async () => {\n    const errorMessage = await apiFunctions.loadData(this.city);\n    if (errorMessage) {\n      this.setState({\n        message: errorMessage\n      });\n    } else {\n      this.setState({\n        cityExist: \"\"\n      });\n      if (this.city.cities.length > 0) {\n        newKey = this.city.cities[this.city.cities.length - 1].key;\n        this.calculationsDiv();\n      } else {\n        this.setState({\n          message: \"Server database is empty.\"\n        });\n      }\n    }\n  };\n\n  renderCities = () => {\n    return this.city.cities.map(city => {\n      return (\n        <City\n          key={city.key}\n          city={city}\n          deleteCity={this.deleteCity}\n          calculationsDiv={this.calculationsDiv}\n        />\n      );\n    });\n  };\n\n  calculationsDiv = () => {\n    if (this.city.cities.length > 0) {\n      const mostNorthern = this.city.getMostNorthern().Name;\n      const mostSouthern = this.city.getMostSouthern().Name;\n      const totalPopulation = this.city.getPopulation();\n\n      this.setState({\n        mostNorth: mostNorthern,\n        mostSouth: mostSouthern,\n        totPop: totalPopulation\n      });\n    } else {\n      this.setState({\n        mostNorth: \"\",\n        mostSouth: \"\",\n        totPop: 0\n      });\n    }\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  addCity = async () => {\n    newKey++;\n    await this.setState({\n      cityExist: this.city.createCity(\n        newKey,\n        this.state.cName,\n        this.state.cLat,\n        this.state.cLong,\n        this.state.cPop\n      ),\n      message: this.state.cityExist\n    });\n\n    if (this.state.cityExist === \"City created\") {\n      let errorMessage = await apiFunctions.addCity(\n        this.city.cities[this.city.cities.length - 1]\n      );\n      if (errorMessage === \"Error from server\") {\n        this.setState({\n          message: errorMessage\n        });\n        this.city.deleteCity(newKey);\n        newKey--;\n      } else {\n        this.calculationsDiv();\n      }\n    } else {\n      newKey--;\n      this.setState({ message: this.state.cityExist });\n    }\n    await this.setState({\n      cName: \"\",\n      cLat: 0,\n      cLong: 0,\n      cPop: 0\n    });\n  };\n\n  deleteCity = async cityToDel => {\n    const errorMessage = await apiFunctions.deleteCity(cityToDel);\n    if (errorMessage) {\n      this.setState({\n        message: errorMessage\n      });\n    } else {\n      this.city.deleteCity(cityToDel);\n      this.setState({\n        cityExist: \"\"\n      });\n      this.calculationsDiv();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"cityContainer\" id=\"idContainer\">\n        <div className=\"topDiv\">\n          City Name:\n          <input\n            id=\"idName\"\n            type=\"text\"\n            name=\"cName\"\n            onChange={this.onChange}\n          />\n          <br />\n          Latitude:\n          <input\n            id=\"idLat\"\n            type=\"number\"\n            name=\"cLat\"\n            onChange={this.onChange}\n          />\n          Longitude:\n          <input\n            id=\"idLong\"\n            type=\"number\"\n            name=\"cLong\"\n            onChange={this.onChange}\n          />\n          Population:\n          <input\n            id=\"idPop\"\n            type=\"number\"\n            name=\"cPop\"\n            onChange={this.onChange}\n          />\n          <input\n            id=\"idNewCity\"\n            type=\"button\"\n            value=\"Add City\"\n            onClick={this.addCity}\n          />\n        </div>\n        <div id=\"idMsg\">{this.state.message}</div>\n        <div className=\"calculationDiv\">\n          <span>Most Northern: {this.state.mostNorth}</span>\n          <span>Most Southern: {this.state.mostSouth}</span>\n          <span> Total Population:{this.state.totPop}</span>\n        </div>\n        <div className=\"cardContain\" id=\"bottomDiv\">\n          {this.renderCities()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cities;\n","class ListNode {\n  constructor(subject, amount) {\n    this.subject = subject;\n    this.amount = amount;\n    this.forwardNode = null;\n    this.prevNode = null;\n  }\n\n  show() {\n    return `Subject: ${this.subject}, Amount: ${this.amount}`;\n  }\n}\n\nclass LinkedList {\n  constructor() {\n    this.head = null;\n    this.current = null;\n  }\n\n  insertNode(subject, amount) {\n    const newNode = new ListNode(subject, amount);\n    if (this.head === null) {\n      this.head = newNode;\n      this.current = newNode;\n      return newNode;\n    } else {\n      if (this.current.forwardNode === null) {\n        this.current.forwardNode = newNode;\n        newNode.forwardNode = null;\n        newNode.prevNode = this.current;\n        this.current = newNode;\n        return newNode;\n      }\n      newNode.forwardNode = this.current.forwardNode;\n      newNode.prevNode = this.current;\n      this.current.forwardNode = newNode;\n      this.current = newNode;\n      return newNode;\n    }\n  }\n\n  firstPosition() {\n    if (this.head !== null) {\n      this.current = this.head;\n      return this.current;\n    }\n  }\n\n  lastPosition() {\n    if (this.head !== null) {\n      let lastNode = this.head;\n      while (lastNode.forwardNode !== null) {\n        lastNode = lastNode.forwardNode;\n      }\n      this.current = lastNode;\n      return this.current;\n    }\n  }\n\n  nextNode() {\n    if (this.head !== null) {\n      if (this.current.forwardNode === null) {\n        return this.current;\n      }\n      this.current = this.current.forwardNode;\n      return this.current;\n    }\n  }\n\n  previousNode() {\n    if (this.head !== null) {\n      if (!this.current.prevNode) {\n        return this.current;\n      } else {\n        this.current = this.current.prevNode;\n        return this.current;\n      }\n    }\n  }\n\n  deleteNode() {\n    if (this.current === this.head) {\n      if (this.head.forwardNode !== null) {\n        this.head = this.current.forwardNode;\n        this.head.prevNode = null;\n        this.current = this.head;\n      } else {\n        this.head = null;\n        this.current = null;\n      }\n    } else {\n      if (this.current.forwardNode === null) {\n        this.current.prevNode.forwardNode = null;\n        this.current = this.current.prevNode;\n      } else {\n        this.current.prevNode.forwardNode = this.current.forwardNode;\n        this.current.forwardNode.prevNode = this.current.prevNode;\n        this.current = this.current.prevNode;\n      }\n    }\n  }\n\n  totalAmount() {\n    if (this.head === null) {\n      return \"List is empty\";\n    } else {\n      let total = 0;\n      let loopNode = this.head;\n      while (loopNode.forwardNode !== null) {\n        total += loopNode.amount;\n        loopNode = loopNode.forwardNode;\n      }\n      total += loopNode.amount;\n      return total;\n    }\n  }\n}\n\nexport { ListNode, LinkedList };\n","import React, { Component, createContext } from \"react\";\n\nexport const ThemeContext = React.createContext();\n\nclass ThemeContextProvider extends Component {\n  state = {\n    isLightTheme: true,\n    green: { text: \"white\", bgBut: \"#112d32\", bgDiv: \"#88bdbc\" },\n    white: { text: \"white\", bgBut: \"#88bdbc\", bgDiv: \"white\" }\n  };\n\n  toggleTheme = () => {\n    this.setState({ isLightTheme: !this.state.isLightTheme });\n  };\n  render() {\n    return (\n      <ThemeContext.Provider\n        value={{ ...this.state, toggleTheme: this.toggleTheme }}\n      >\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default ThemeContextProvider;\n","import React, { useState, useContext } from \"react\";\nimport \"../../../src/linkedList.css\";\nimport { LinkedList } from \"./scripts/linkedList\";\nimport { ThemeContext } from \"../context/context\";\n\nconst list = new LinkedList();\n\nconst LinkedLists = () => {\n  const { isLightTheme, green, white } = useContext(ThemeContext);\n  const theme = isLightTheme ? green : white;\n  const [subject, setSubject] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"List is empty\");\n  let [message, setMessage] = useState(\"\");\n\n  const handleAdd = () => {\n    if (subject !== \"\" && amount !== \"\") {\n      list.insertNode(subject, Number(amount));\n      setPosition(list.current.subject);\n      setSubject(\"\");\n      setAmount(\"\");\n      setMessage(\"\");\n    } else {\n      setMessage(\"Please enter subject and amount\");\n    }\n  };\n\n  const displayList = () => {\n    if (!list.head) {\n      return null;\n    } else {\n      const listNodes = [];\n      let node = list.head;\n      let counter = 1;\n      while (node) {\n        listNodes.push(\n          <li key={counter}>\n            {node.subject}: {node.amount}\n          </li>\n        );\n        node = node.forwardNode;\n        counter++;\n      }\n      return listNodes;\n    }\n  };\n\n  const handleFirst = () => {\n    if (list.current) {\n      list.firstPosition();\n      setPosition(list.current.subject);\n    } else {\n      setPosition(\"List is empty\");\n    }\n  };\n\n  const handlePrevious = () => {\n    if (list.current) {\n      list.previousNode();\n      setPosition(list.current.subject);\n    } else {\n      setPosition(\"List is empty\");\n    }\n  };\n\n  const handleNext = () => {\n    if (list.current) {\n      list.nextNode();\n      setPosition(list.current.subject);\n    } else {\n      setPosition(\"List is empty\");\n    }\n  };\n\n  const handleLast = () => {\n    if (list.current) {\n      list.lastPosition();\n      setPosition(list.current.subject);\n    } else {\n      setPosition(\"List is empty\");\n    }\n  };\n\n  const handleTotal = () => {\n    let tot = list.totalAmount();\n    setMessage(tot);\n    setTimeout(() => setMessage(\"\"), 3000);\n  };\n\n  const handleDelete = () => {\n    if (list.current) {\n      list.deleteNode();\n      if (list.current) {\n        setPosition(list.current.subject);\n      } else {\n        setPosition(\"List is empty\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"linkContainer\" style={{ background: theme.bgDiv }}>\n      <div className=\"linkItem\">\n        Item:\n        <input\n          type=\"text\"\n          id=\"idSubject\"\n          value={subject}\n          onChange={event => setSubject(event.target.value)}\n        />\n        Amount:\n        <input\n          type=\"number\"\n          id=\"idAmount\"\n          value={amount}\n          onChange={event => setAmount(event.target.value)}\n        />\n        <input\n          className=\"addNode\"\n          type=\"button\"\n          value=\"Add Item\"\n          onClick={handleAdd}\n          style={{ color: theme.text, background: theme.bgBut }}\n        />\n      </div>\n      <div className=\"message\">{message}</div>\n      <div className=\"current\">Current Item: {position}</div>\n      <div className=\"linkFunctions\">\n        <input\n          className=\"buttonNode\"\n          type=\"button\"\n          onClick={handleFirst}\n          value=\"First\"\n        />\n        <input\n          className=\"buttonNode\"\n          type=\"button\"\n          value=\"Previous\"\n          onClick={handlePrevious}\n        />\n        <input\n          className=\"buttonNode\"\n          type=\"button\"\n          value=\"Next\"\n          onClick={handleNext}\n        />\n        <input\n          className=\"buttonNode\"\n          type=\"button\"\n          value=\"Last\"\n          onClick={handleLast}\n        />\n        <input\n          className=\"buttonNode\"\n          type=\"button\"\n          value=\"Total\"\n          onClick={handleTotal}\n        />\n        <input\n          className=\"delNode\"\n          type=\"button\"\n          value=\"Delete Item\"\n          onClick={handleDelete}\n          style={{ color: theme.text, background: theme.bgBut }}\n        />\n      </div>\n      <div className=\"list\">\n        <ol>{displayList()}</ol>\n      </div>\n    </div>\n  );\n};\n\nexport default LinkedLists;\n","export class Queue {\n  constructor() {\n    this.queueArr = [];\n  }\n\n  addQueue(data) {\n    this.queueArr.push(data);\n  }\n\n  deleteQueue() {\n    this.queueArr.shift();\n  }\n}\n\nexport class Stack {\n  constructor() {\n    this.stackArr = [];\n  }\n\n  addStack(data) {\n    this.stackArr.push(data);\n  }\n\n  deleteStack() {\n    this.stackArr.pop();\n  }\n}\n","import React from \"react\";\n\nconst Fifo = props => {\n  return (\n    <div>\n      {props.queueL.queueArr.map(data => (\n        <li>{data}</li>\n      ))}\n    </div>\n  );\n};\n\nexport default Fifo;\n","import React from \"react\";\n\nconst Lifo = props => {\n  return (\n    <div>\n      {props.stackL.stackArr.map(data => (\n        <li>{data}</li>\n      ))}\n    </div>\n  );\n};\n\nexport default Lifo;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Queue, Stack } from \"./fifoLifo.js\";\nimport Fifo from \"./Fifo.js\";\nimport Lifo from \"./Lifo.js\";\nimport \"../../../src/fifoLifo.css\";\nimport { ThemeContext } from \"../context/context\";\n\nconst queueL = new Queue();\nconst stackL = new Stack();\n\nconst FifoLifos = () => {\n  const { isLightTheme, green, white } = useContext(ThemeContext);\n  const theme = isLightTheme ? green : white;\n\n  const [firstQueue, setfirstQueue] = useState(\"\");\n  const [lastStack, setlastStack] = useState(\"\");\n  const [index, setIndex] = useState(0);\n\n  const abc = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\"\n  ];\n\n  const handlePutIn = () => {\n    queueL.addQueue(abc[index]);\n    if (index === 0) {\n      setfirstQueue(abc[index]);\n    }\n    stackL.addStack(abc[index]);\n    setlastStack(abc[index]);\n    setIndex(index + 1);\n  };\n\n  const handleTakeOut = () => {\n    queueL.deleteQueue();\n    setfirstQueue(queueL.queueArr[0]);\n    stackL.deleteStack();\n    setlastStack(stackL.stackArr[stackL.stackArr.length - 1]);\n  };\n\n  return (\n    <div className=\"lifoContainer\" style={{ background: theme.bgDiv }}>\n      {/* <div className=\"message\">{message}</div> */}\n      <div className=\"itemIn\">\n        <div className=\"item\">Item to add: {abc[index]} </div>\n        <button\n          className=\"putIn\"\n          onClick={handlePutIn}\n          style={{ color: theme.text, background: theme.bgBut }}\n        >\n          Put In\n        </button>\n      </div>\n      <div className=\"lists\">\n        <h3>Queue</h3>\n        <h3>Stack</h3>\n        <Fifo queueL={queueL} />\n        <Lifo stackL={stackL} />\n      </div>\n      <div className=\"itemOut\">\n        <div className=\"item\">Item out of Queue: {firstQueue} </div>\n        <div className=\"item\">Item out of Stack: {lastStack}</div>\n      </div>\n      <div className=\"divOut\">\n        <button\n          className=\"takeOut\"\n          onClick={handleTakeOut}\n          style={{ color: theme.text, background: theme.bgBut }}\n        >\n          Take Out\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FifoLifos;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../context/context\";\nconst Settings = () => {\n  const { toggleTheme } = useContext(ThemeContext);\n\n  return (\n    <div className=\"settings\">\n      <h3>Select Theme:</h3>\n      <button onClick={toggleTheme}> Toggle the theme </button>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport home from \"./home.svg\";\nimport tictac from \"./tictac.svg\";\nimport bank from \"./bank.svg\";\nimport city from \"./city.svg\";\nimport link from \"./link.svg\";\nimport stack from \"./coins.svg\";\nimport settings from \"./settings.svg\";\nimport Game from \"./components/tictactoe/Game\";\nimport Account from \"./components/accounts/Accounts\";\nimport Cities from \"./components/cities/Cities\";\nimport LinkedLists from \"./components/linkedLists/LinkedLists\";\nimport FifoLifos from \"./components/fifoLifo/FifoLifos\";\nimport Settings from \"./components/context/Settings\";\nimport { ThemeContext } from \"./components/context/context\";\n// import ThemeProvider from \"./components/context/Settings\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  static contextType = ThemeContext;\n\n  constructor() {\n    super();\n    this.state = {\n      whoClicked: \"mainApp\"\n    };\n  }\n\n  async onPushMe(e) {\n    await this.setState({\n      whoClicked: e\n    });\n    return this.state.whoClicked;\n  }\n\n  showIcons = () => {\n    return (\n      <div className=\"iconsDiv\">\n        <img\n          src={home}\n          className=\"icons\"\n          id=\"idApple\"\n          alt=\"homeLogo\"\n          name=\"mainApp\"\n          onClick={e => this.onPushMe(e.target.name)}\n        />\n\n        <img\n          src={tictac}\n          className=\"icons\"\n          id=\"idBanana\"\n          alt=\"tictacLogo\"\n          name=\"titactoeApp\"\n          onClick={e => this.onPushMe(e.target.name)}\n        />\n        <img\n          src={bank}\n          className=\"icons\"\n          id=\"idStraw\"\n          alt=\"accountLogo\"\n          name=\"accountApp\"\n          onClick={e => this.onPushMe(e.target.name)}\n        />\n        <img\n          src={city}\n          className=\"icons\"\n          id=\"idBlender\"\n          alt=\"cityLogo\"\n          name=\"cityApp\"\n          onClick={e => this.onPushMe(e.target.name)}\n        />\n        <img\n          src={link}\n          className=\"icons\"\n          id=\"idLink\"\n          alt=\"linkLogo\"\n          name=\"linkedListApp\"\n          onClick={e => this.onPushMe(e.target.name)}\n        />\n        <img\n          src={stack}\n          className=\"icons\"\n          id=\"idStack\"\n          alt=\"stackLogo\"\n          name=\"lifoFifoApp\"\n          onClick={e => this.onPushMe(e.target.name)}\n        />\n        <img\n          src={settings}\n          className=\"icons\"\n          id=\"idSettings\"\n          alt=\"settingsLogo\"\n          name=\"settingsApp\"\n          onClick={e => this.onPushMe(e.target.name)}\n        />\n      </div>\n    );\n  };\n\n  showApp = () => {\n    if (this.state.whoClicked === \"mainApp\") {\n      return (\n        <div>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          </header>\n        </div>\n      );\n    }\n    if (this.state.whoClicked === \"titactoeApp\") {\n      return (\n        <div className=\"tictacDiv\">\n          <h4>Tic-Tac-Toe</h4>\n          <div className=\"gameDiv\">\n            <Game />\n          </div>\n        </div>\n      );\n    }\n    if (this.state.whoClicked === \"accountApp\") {\n      return (\n        <div className=\"tictacDiv\">\n          <h4>Accounts</h4>\n          <div className=\"gameDiv\">\n            <Account />\n          </div>\n        </div>\n      );\n    }\n    if (this.state.whoClicked === \"cityApp\") {\n      return (\n        <div className=\"tictacDiv\">\n          <h4>Cities</h4>\n          <div className=\"gameDiv\">\n            <Cities />\n          </div>\n        </div>\n      );\n    }\n    if (this.state.whoClicked === \"linkedListApp\") {\n      return (\n        <div className=\"tictacDiv\">\n          <h4>Linked List</h4>\n          <div className=\"gameDiv\">\n            <LinkedLists />\n          </div>\n        </div>\n      );\n    }\n    if (this.state.whoClicked === \"lifoFifoApp\") {\n      return (\n        <div className=\"tictacDiv\">\n          <h4>Lifo Fifo</h4>\n          <div className=\"gameDiv\">\n            <FifoLifos />\n          </div>\n        </div>\n      );\n    }\n    if (this.state.whoClicked === \"settingsApp\") {\n      return (\n        <div className=\"tictacDiv\">\n          <h4>Settings</h4>\n          <div className=\"gameDiv\">\n            <Settings />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    // const { isLightTheme, green, white } = this.context;\n    // const theme = isLightTheme ? green : white;\n    let newDiv = <div>{this.state.whoClicked} </div>;\n    return (\n      <div className=\"App\">\n        {this.showIcons()}\n        {newDiv}\n        <div className=\"appContainer\">{this.showApp()}</div>\n        {/* <div>\n          Icons from{\" \"}\n          <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n            www.flaticon.com\n          </a>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport ThemeContextProvider, {\n  ThemeContext\n} from \"./components/context/context\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <ThemeContextProvider>\n    <App />\n  </ThemeContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}